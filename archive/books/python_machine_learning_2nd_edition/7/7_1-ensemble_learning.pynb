# p.255, Run this code and verify the results.

from scipy.special import comb
import math

def ensemble_error( n_classifier, error):
  k_start = int( math.ceil(n_classifier/2.))
  probabilities = [ comb( n_classifier,k ) *
                    error**k *
                    (1-error)**(n_classifier-k)
                    for k in range(k_start, n_classifier +1)]
  # probabilities = []
  # for k in range(k_start, n_classifier+1):
  #   probability = comb( n_classifier,k ) * error**k * (1-error)**(n_classifier-k)
  #   probabilities.append( probability )
  return sum( probabilities )
  
  if __name__ == "__main__":
    print( ensemble_error( 11, 0.25 ) )

import numpy as np
import matplotlib.pyplot as plt

num_classifiers = 11
error_range = np.arange(0.0, 1.01,0.01)  # from 0 to 1
ensemble_errors = [ensemble_error(n_classifiers=num_classifiers,error=error) for error in error_range]
plt.plot( error_range, ensemble_errors
          label='Ensemble error',
          linewidth=2 )
plt.xlabel('Base error')
plt.ylabel('Base/Ensemble error')
plt.legend(loc='upper left')
plt.grid( alpha=0.5 )
plt.show()
