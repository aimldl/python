# -*- coding: utf-8 -*-
"""
j2p-02_6-set.py

p.91, 집합 자료형

집합 (set)의 2가지 특징
1. 중복을 허용하지 않는다.
2. 순서가 없다. (Unordered)

"""

#%%#####################
# 집합은 어떻게 만들까? #
########################
s1 = set( [1,2,3] )
print(s1)
#{1, 2, 3}

s2 = set('Hello')
print(s2)
#{'o', 'l', 'H', 'e'}

#%%###########
# 집합의 특징 #
##############
# Unordered -> No indexing
#
# 리스트,튜플은 순서가 있으므로 인덱싱을 통해 자료형의 값을 얻을 수 있다.
# 집합은 순서가 없기때문에 인덱싱으로 값을 얻을 수 없다.
# 딕셔너리도 순서가 없으므로 인덱싱을 지원하지 않는다.
#
# 세트에 저장된 값을 인덱싱으로 접근하려면,
#   리스트, 튜플로 변환한 후 해야한다.

s1 = set( [1,2,3] )
l1 = list(s1)
print( l1 ) 
# [1, 2, 3]
print( l1[0] )
# 1

t1 = tuple(s1)
print( t1 )
# (1, 2, 3)
print( t1[0] )
# 1

#%%##################
# 집합 활용하는 방법 #
#####################
# 교집합, 합집합, 차집합 구하기
s1 = set( [1, 2, 3, 4, 5, 6] )
s2 = set( [4, 5, 6, 7, 8, 9] )

#%%#########
# 1.교집합 #
############
print( s1 & s2 )
# {4, 5, 6}

print( s1.intersection(s2) )
# {4, 5, 6}

#%%#########
# 2.합집합 #
############
print( s1|s2 )
# {1, 2, 3, 4, 5, 6, 7, 8, 9}

print( s1.union(s2) )
# {1, 2, 3, 4, 5, 6, 7, 8, 9}

#%%#########
# 3.차집합 #
############
print( s1-s2 )
# {1, 2, 3}

print( s2-s1 )
# {8, 9, 7}

#%%################
# 집합 관련 함수들 #
###################

#%%###########################
# 값 1개 추가하기 (add) #
##############################
s1 = set([1,2,3])
s1.add(4)
print( s1 )
# # {1, 2, 3, 4}

#%%###########################
# 값 여러개 추가하기 (update) #
##############################
s1 = set([1,2,3])
s1.update([4,5,6])
print( s1 )
# {1, 2, 3, 4, 5, 6}

#%%#########################
# 특정 값 제거하기 (remove) #
############################
s1 = set([1,2,3])
s1.remove(2)
print( s1 )
# {1, 3}